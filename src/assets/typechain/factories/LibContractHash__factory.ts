/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibContractHash,
  LibContractHashInterface,
} from "../LibContractHash";

const _abi = [
  {
    inputs: [],
    name: "CONTRACT_CONTENT_FACTORY",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_ERC20_ESCROW",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_EXCHANGE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_EXCHANGE_FEE_ESCROW",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_EXECUTION_MANAGER",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_LIQUIDITY_MINING",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_NFT_ESCROW",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_ORDERBOOK",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_RAWR_TOKEN",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_ROYALTY_MANAGER",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONTRACT_STAKING",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610307610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c8063af39bf841161007b578063af39bf841461014e578063b58268401461016c578063caca24521461018a578063cb9d5b49146101a8578063e3e062b7146101c6578063ef6adf6d146101e4576100b3565b806302d12eb2146100b85780634104312b146100d657806383867fea146100f4578063a0e3a10e14610112578063a38e614c14610130575b600080fd5b6100c0610202565b6040516100cd919061028a565b60405180910390f35b6100de61020d565b6040516100eb919061028a565b60405180910390f35b6100fc610218565b604051610109919061028a565b60405180910390f35b61011a610223565b604051610127919061028a565b60405180910390f35b61013861022e565b604051610145919061028a565b60405180910390f35b610156610239565b604051610163919061028a565b60405180910390f35b610174610244565b604051610181919061028a565b60405180910390f35b61019261024f565b60405161019f919061028a565b60405180910390f35b6101b061025a565b6040516101bd919061028a565b60405180910390f35b6101ce610265565b6040516101db919061028a565b60405180910390f35b6101ec610270565b6040516101f9919061028a565b60405180910390f35b631b48faca60e01b81565b63d9ff761860e01b81565b6387d4498b60e01b81565b63eef6410360e01b81565b633d13c04360e01b81565b632c7e992e60e01b81565b63018869a960e01b81565b63db337f7d60e01b81565b6329a264aa60e01b81565b637f17083660e01b81565b63385742b960e01b81565b610284816102a5565b82525050565b600060208201905061029f600083018461027b565b92915050565b60007fffffffff000000000000000000000000000000000000000000000000000000008216905091905056fea264697066735822122005bf28eadbeac40c7f2a8a3c97f6c708c3254e613979044301ab0472a0e095b264736f6c63430008030033";

export class LibContractHash__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibContractHash> {
    return super.deploy(overrides || {}) as Promise<LibContractHash>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibContractHash {
    return super.attach(address) as LibContractHash;
  }
  connect(signer: Signer): LibContractHash__factory {
    return super.connect(signer) as LibContractHash__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibContractHashInterface {
    return new utils.Interface(_abi) as LibContractHashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibContractHash {
    return new Contract(address, _abi, signerOrProvider) as LibContractHash;
  }
}
