/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestHasContractUri,
  TestHasContractUriInterface,
} from "../TestHasContractUri";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "parent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uriPrefix",
        type: "string",
      },
    ],
    name: "ContractUriUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "parent",
        type: "address",
      },
    ],
    name: "ParentSet",
    type: "event",
  },
  {
    inputs: [],
    name: "contractUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractUri",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "parent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractUri",
        type: "string",
      },
    ],
    name: "setContractUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "setParent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ccb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780631499c5921461009757806360f96a8f146100b3578063c0e24d5e146100d1578063ccb4807b146100ef578063f62d18881461010b575b600080fd5b610081600480360381019061007c9190610860565b610127565b60405161008e9190610982565b60405180910390f35b6100b160048036038101906100ac9190610837565b61019f565b005b6100bb6101a2565b6040516100c89190610967565b60405180910390f35b6100d96101b1565b6040516100e6919061099d565b60405180910390f35b61010960048036038101906101049190610889565b61023f565b005b61012560048036038101906101209190610889565b61024b565b005b600061013282610336565b80610198575060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b50565b60006101ac6103a0565b905090565b606680546101be90610b1d565b80601f01602080910402602001604051908101604052809291908181526020018280546101ea90610b1d565b80156102375780601f1061020c57610100808354040283529160200191610237565b820191906000526020600020905b81548152906001019060200180831161021a57829003601f168201915b505050505081565b610248816103ca565b50565b600060019054906101000a900460ff1680610271575060008054906101000a900460ff16155b6102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a7906109df565b60405180910390fd5b60008060019054906101000a900460ff161590508015610300576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61030982610439565b610311610553565b80156103325760008060016101000a81548160ff0219169083151502179055505b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80606690805190602001906103e0929190610702565b506103e96103a0565b73ffffffffffffffffffffffffffffffffffffffff167f7918936e97b7abbc853347774f228b58a704c6dd0961a59d3722a0786b51b01c8260405161042e919061099d565b60405180910390a250565b600060019054906101000a900460ff168061045f575060008054906101000a900460ff16155b61049e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610495906109df565b60405180910390fd5b60008060019054906101000a900460ff1615905080156104ee576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8160669080519060200190610504929190610702565b5061052e7fc0e24d5e0000000000000000000000000000000000000000000000000000000061062c565b801561054f5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680610579575060008054906101000a900460ff16155b6105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af906109df565b60405180910390fd5b60008060019054906101000a900460ff161590508015610608576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156106295760008060016101000a81548160ff0219169083151502179055505b50565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c906109bf565b60405180910390fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b82805461070e90610b1d565b90600052602060002090601f0160209004810192826107305760008555610777565b82601f1061074957805160ff1916838001178555610777565b82800160010185558215610777579182015b8281111561077657825182559160200191906001019061075b565b5b5090506107849190610788565b5090565b5b808211156107a1576000816000905550600101610789565b5090565b60006107b86107b384610a24565b6109ff565b9050828152602081018484840111156107d057600080fd5b6107db848285610adb565b509392505050565b6000813590506107f281610c67565b92915050565b60008135905061080781610c7e565b92915050565b600082601f83011261081e57600080fd5b813561082e8482602086016107a5565b91505092915050565b60006020828403121561084957600080fd5b6000610857848285016107e3565b91505092915050565b60006020828403121561087257600080fd5b6000610880848285016107f8565b91505092915050565b60006020828403121561089b57600080fd5b600082013567ffffffffffffffff8111156108b557600080fd5b6108c18482850161080d565b91505092915050565b6108d381610a71565b82525050565b6108e281610a83565b82525050565b60006108f382610a55565b6108fd8185610a60565b935061090d818560208601610aea565b61091681610bde565b840191505092915050565b600061092e601c83610a60565b915061093982610bef565b602082019050919050565b6000610951602e83610a60565b915061095c82610c18565b604082019050919050565b600060208201905061097c60008301846108ca565b92915050565b600060208201905061099760008301846108d9565b92915050565b600060208201905081810360008301526109b781846108e8565b905092915050565b600060208201905081810360008301526109d881610921565b9050919050565b600060208201905081810360008301526109f881610944565b9050919050565b6000610a09610a1a565b9050610a158282610b4f565b919050565b6000604051905090565b600067ffffffffffffffff821115610a3f57610a3e610baf565b5b610a4882610bde565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a7c82610abb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610b08578082015181840152602081019050610aed565b83811115610b17576000848401525b50505050565b60006002820490506001821680610b3557607f821691505b60208210811415610b4957610b48610b80565b5b50919050565b610b5882610bde565b810181811067ffffffffffffffff82111715610b7757610b76610baf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b610c7081610a71565b8114610c7b57600080fd5b50565b610c8781610a8f565b8114610c9257600080fd5b5056fea26469706673582212207fbe830d7a35658467f2bcc41a55424787619b9956498188a3184e77cd51402364736f6c63430008030033";

export class TestHasContractUri__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestHasContractUri> {
    return super.deploy(overrides || {}) as Promise<TestHasContractUri>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestHasContractUri {
    return super.attach(address) as TestHasContractUri;
  }
  connect(signer: Signer): TestHasContractUri__factory {
    return super.connect(signer) as TestHasContractUri__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHasContractUriInterface {
    return new utils.Interface(_abi) as TestHasContractUriInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestHasContractUri {
    return new Contract(address, _abi, signerOrProvider) as TestHasContractUri;
  }
}
