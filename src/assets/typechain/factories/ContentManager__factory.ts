/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContentManager,
  ContentManagerInterface,
} from "../ContentManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControlManager",
    outputs: [
      {
        internalType: "contract IAccessControlManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "publicDataUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "hiddenDataUri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "royaltyRate",
            type: "uint24",
          },
        ],
        internalType: "struct LibAsset.CreateData[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "addAssetBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "contract IContent",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contentStorage",
    outputs: [
      {
        internalType: "contract IContentStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_content",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contentStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControlManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.MintData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
        ],
        internalType: "struct LibAsset.SystemApprovalPair[]",
        name: "_operators",
        type: "tuple[]",
      },
    ],
    name: "registerOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_rate",
        type: "uint24",
      },
    ],
    name: "setContractRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct LibAsset.AssetUri[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setHiddenUriBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct LibAsset.AssetUri[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setPublicUriBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "royaltyRate",
            type: "uint24",
          },
        ],
        internalType: "struct LibAsset.AssetRoyalties[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setTokenRoyaltiesBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612c86806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638a4d5a6711610097578063b4a0bdf311610066578063b4a0bdf314610236578063c0c53b8b14610254578063f2fde38b14610270578063fd53da921461028c576100f5565b80638a4d5a67146101c05780638da5cb5b146101de578063960e9a03146101fc578063ae95f3ca14610218576100f5565b80631d071a8b116100d35780631d071a8b1461016257806352104efd1461017e578063715018a61461019a57806384547d25146101a4576100f5565b806301ffc9a7146100fa578063094bc2761461012a5780631c26a2cd14610146575b600080fd5b610114600480360381019061010f9190611e9f565b6102a8565b60405161012191906124eb565b60405180910390f35b610144600480360381019061013f9190611e35565b6102ba565b005b610160600480360381019061015b9190611db3565b61068b565b005b61017c60048036038101906101779190611df4565b610797565b005b61019860048036038101906101939190611d36565b6108a3565b005b6101a26109b2565b005b6101be60048036038101906101b99190611ec8565b610a3a565b005b6101c8610b46565b6040516101d59190612565565b60405180910390f35b6101e6610b6c565b6040516101f39190612441565b60405180910390f35b61021660048036038101906102119190611db3565b610b96565b005b610220610ca2565b60405161022d919061254a565b60405180910390f35b61023e610cc8565b60405161024b919061252f565b60405180910390f35b61026e60048036038101906102699190611ce7565b610cee565b005b61028a60048036038101906102859190611cbe565b610de5565b005b6102a660048036038101906102a19190611d72565b610edd565b005b60006102b382610fe9565b9050919050565b6102c2611061565b73ffffffffffffffffffffffffffffffffffffffff166102e0610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d906125e0565b60405180910390fd5b60005b81518110156106875781818151811061037b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151156105035760cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f2ff15d60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190611e76565b8484815181106104a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001516040518363ffffffff1660e01b81526004016104cc929190612506565b600060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b50505050610676565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d547741f60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a957600080fd5b505afa1580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611e76565b84848151811061061a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001516040518363ffffffff1660e01b8152600401610643929190612506565b600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b505050505b8061068090612a1e565b9050610339565b5050565b610693611061565b73ffffffffffffffffffffffffffffffffffffffff166106b1610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe906125e0565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c26a2cd826040518263ffffffff1660e01b815260040161076291906124a7565b600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b5050505050565b61079f611061565b73ffffffffffffffffffffffffffffffffffffffff166107bd610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a906125e0565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d071a8b826040518263ffffffff1660e01b815260040161086e91906124c9565b600060405180830381600087803b15801561088857600080fd5b505af115801561089c573d6000803e3d6000fd5b5050505050565b6108ab611061565b73ffffffffffffffffffffffffffffffffffffffff166108c9610b6c565b73ffffffffffffffffffffffffffffffffffffffff161461091f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906125e0565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166352104efd83836040518363ffffffff1660e01b815260040161097c92919061245c565b600060405180830381600087803b15801561099657600080fd5b505af11580156109aa573d6000803e3d6000fd5b505050505050565b6109ba611061565b73ffffffffffffffffffffffffffffffffffffffff166109d8610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a25906125e0565b60405180910390fd5b610a386000611069565b565b610a42611061565b73ffffffffffffffffffffffffffffffffffffffff16610a60610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad906125e0565b60405180910390fd5b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384547d25826040518263ffffffff1660e01b8152600401610b119190612600565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b5050505050565b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b9e611061565b73ffffffffffffffffffffffffffffffffffffffff16610bbc610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c09906125e0565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663960e9a03826040518263ffffffff1660e01b8152600401610c6d91906124a7565b600060405180830381600087803b158015610c8757600080fd5b505af1158015610c9b573d6000803e3d6000fd5b5050505050565b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff1680610d14575060008054906101000a900460ff16155b610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a906125c0565b60405180910390fd5b60008060019054906101000a900460ff161590508015610da3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610dab61112f565b610db3611218565b610dbe8484846112f1565b8015610ddf5760008060016101000a81548160ff0219169083151502179055505b50505050565b610ded611061565b73ffffffffffffffffffffffffffffffffffffffff16610e0b610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e58906125e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec890612580565b60405180910390fd5b610eda81611069565b50565b610ee5611061565b73ffffffffffffffffffffffffffffffffffffffff16610f03610b6c565b73ffffffffffffffffffffffffffffffffffffffff1614610f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f50906125e0565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd53da92826040518263ffffffff1660e01b8152600401610fb49190612485565b600060405180830381600087803b158015610fce57600080fd5b505af1158015610fe2573d6000803e3d6000fd5b5050505050565b6000610ff4826114a0565b8061105a575060976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680611155575060008054906101000a900460ff16155b611194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118b906125c0565b60405180910390fd5b60008060019054906101000a900460ff1615905080156111e4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6111f46111ef611061565b611069565b80156112155760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061123e575060008054906101000a900460ff16155b61127d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611274906125c0565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112cd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156112ee5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611317575060008054906101000a900460ff16155b611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134d906125c0565b60405180910390fd5b60008060019054906101000a900460ff1615905080156113a6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6113b663ead8216760e01b61150a565b8360c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561149a5760008060016101000a81548160ff0219169083151502179055505b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415611573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156a906125a0565b60405180910390fd5b600160976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006115f36115ee84612647565b612622565b9050808382526020820190508285606086028201111561161257600080fd5b60005b85811015611642578161162888826119d4565b845260208401935060608301925050600181019050611615565b5050509392505050565b600061165f61165a84612673565b612622565b9050808382526020820190508260005b8581101561169f57813585016116858882611a34565b84526020840193506020830192505060018101905061166f565b5050509392505050565b60006116bc6116b78461269f565b612622565b9050808382526020820190508260005b858110156116fc57813585016116e28882611a98565b8452602084019350602083019250506001810190506116cc565b5050509392505050565b6000611719611714846126cb565b612622565b9050808382526020820190508285604086028201111561173857600080fd5b60005b85811015611768578161174e8882611c48565b84526020840193506040830192505060018101905061173b565b5050509392505050565b6000611785611780846126f7565b612622565b905080838252602082019050828560208602820111156117a457600080fd5b60005b858110156117d457816117ba8882611ca9565b8452602084019350602083019250506001810190506117a7565b5050509392505050565b60006117f16117ec84612723565b612622565b90508281526020810184848401111561180957600080fd5b6118148482856129ab565b509392505050565b600061182f61182a84612754565b612622565b90508281526020810184848401111561184757600080fd5b6118528482856129ab565b509392505050565b60008135905061186981612bc6565b92915050565b600082601f83011261188057600080fd5b81356118908482602086016115e0565b91505092915050565b600082601f8301126118aa57600080fd5b81356118ba84826020860161164c565b91505092915050565b600082601f8301126118d457600080fd5b81356118e48482602086016116a9565b91505092915050565b600082601f8301126118fe57600080fd5b813561190e848260208601611706565b91505092915050565b600082601f83011261192857600080fd5b8135611938848260208601611772565b91505092915050565b60008135905061195081612bdd565b92915050565b60008151905061196581612bf4565b92915050565b60008135905061197a81612c0b565b92915050565b600082601f83011261199157600080fd5b81356119a18482602086016117de565b91505092915050565b600082601f8301126119bb57600080fd5b81356119cb84826020860161181c565b91505092915050565b6000606082840312156119e657600080fd5b6119f06060612622565b90506000611a0084828501611ca9565b6000830152506020611a148482850161185a565b6020830152506040611a2884828501611c94565b60408301525092915050565b600060408284031215611a4657600080fd5b611a506040612622565b90506000611a6084828501611ca9565b600083015250602082013567ffffffffffffffff811115611a8057600080fd5b611a8c848285016119aa565b60208301525092915050565b600060c08284031215611aaa57600080fd5b611ab460c0612622565b90506000611ac484828501611ca9565b600083015250602082013567ffffffffffffffff811115611ae457600080fd5b611af0848285016119aa565b602083015250604082013567ffffffffffffffff811115611b1057600080fd5b611b1c848285016119aa565b6040830152506060611b3084828501611ca9565b6060830152506080611b448482850161185a565b60808301525060a0611b5884828501611c94565b60a08301525092915050565b600060c08284031215611b7657600080fd5b611b8060c0612622565b90506000611b908482850161185a565b600083015250602082013567ffffffffffffffff811115611bb057600080fd5b611bbc84828501611917565b602083015250604082013567ffffffffffffffff811115611bdc57600080fd5b611be884828501611917565b6040830152506060611bfc84828501611ca9565b6060830152506080611c108482850161185a565b60808301525060a082013567ffffffffffffffff811115611c3057600080fd5b611c3c84828501611980565b60a08301525092915050565b600060408284031215611c5a57600080fd5b611c646040612622565b90506000611c748482850161185a565b6000830152506020611c8884828501611941565b60208301525092915050565b600081359050611ca381612c22565b92915050565b600081359050611cb881612c39565b92915050565b600060208284031215611cd057600080fd5b6000611cde8482850161185a565b91505092915050565b600080600060608486031215611cfc57600080fd5b6000611d0a8682870161185a565b9350506020611d1b8682870161185a565b9250506040611d2c8682870161185a565b9150509250925092565b60008060408385031215611d4957600080fd5b6000611d578582860161185a565b9250506020611d6885828601611c94565b9150509250929050565b600060208284031215611d8457600080fd5b600082013567ffffffffffffffff811115611d9e57600080fd5b611daa8482850161186f565b91505092915050565b600060208284031215611dc557600080fd5b600082013567ffffffffffffffff811115611ddf57600080fd5b611deb84828501611899565b91505092915050565b600060208284031215611e0657600080fd5b600082013567ffffffffffffffff811115611e2057600080fd5b611e2c848285016118c3565b91505092915050565b600060208284031215611e4757600080fd5b600082013567ffffffffffffffff811115611e6157600080fd5b611e6d848285016118ed565b91505092915050565b600060208284031215611e8857600080fd5b6000611e9684828501611956565b91505092915050565b600060208284031215611eb157600080fd5b6000611ebf8482850161196b565b91505092915050565b600060208284031215611eda57600080fd5b600082013567ffffffffffffffff811115611ef457600080fd5b611f0084828501611b64565b91505092915050565b6000611f15838361226e565b60608301905092915050565b6000611f2d83836122b0565b905092915050565b6000611f4183836122ed565b905092915050565b6000611f558383612432565b60208301905092915050565b611f6a816128b2565b82525050565b611f79816128b2565b82525050565b6000611f8a826127c5565b611f94818561283b565b9350611f9f83612785565b8060005b83811015611fd0578151611fb78882611f09565b9750611fc283612807565b925050600181019050611fa3565b5085935050505092915050565b6000611fe8826127d0565b611ff2818561284c565b93508360208202850161200485612795565b8060005b8581101561204057848403895281516120218582611f21565b945061202c83612814565b925060208a01995050600181019050612008565b50829750879550505050505092915050565b600061205d826127db565b612067818561285d565b935083602082028501612079856127a5565b8060005b858110156120b557848403895281516120968582611f35565b94506120a183612821565b925060208a0199505060018101905061207d565b50829750879550505050505092915050565b60006120d2826127e6565b6120dc818561286e565b93506120e7836127b5565b8060005b838110156121185781516120ff8882611f49565b975061210a8361282e565b9250506001810190506120eb565b5085935050505092915050565b61212e816128c4565b82525050565b61213d816128d0565b82525050565b600061214e826127f1565b612158818561287f565b93506121688185602086016129ba565b61217181612ac5565b840191505092915050565b6121858161293f565b82525050565b61219481612963565b82525050565b6121a381612987565b82525050565b60006121b4826127fc565b6121be8185612890565b93506121ce8185602086016129ba565b6121d781612ac5565b840191505092915050565b60006121ef6026836128a1565b91506121fa82612ad6565b604082019050919050565b6000612212601c836128a1565b915061221d82612b25565b602082019050919050565b6000612235602e836128a1565b915061224082612b4e565b604082019050919050565b60006122586020836128a1565b915061226382612b9d565b602082019050919050565b6060820160008201516122846000850182612432565b5060208201516122976020850182611f61565b5060408201516122aa6040850182612414565b50505050565b60006040830160008301516122c86000860182612432565b50602083015184820360208601526122e082826121a9565b9150508091505092915050565b600060c0830160008301516123056000860182612432565b506020830151848203602086015261231d82826121a9565b9150506040830151848203604086015261233782826121a9565b915050606083015161234c6060860182612432565b50608083015161235f6080860182611f61565b5060a083015161237260a0860182612414565b508091505092915050565b600060c0830160008301516123956000860182611f61565b50602083015184820360208601526123ad82826120c7565b915050604083015184820360408601526123c782826120c7565b91505060608301516123dc6060860182612432565b5060808301516123ef6080860182611f61565b5060a083015184820360a08601526124078282612143565b9150508091505092915050565b61241d81612926565b82525050565b61242c81612926565b82525050565b61243b81612935565b82525050565b60006020820190506124566000830184611f70565b92915050565b60006040820190506124716000830185611f70565b61247e6020830184612423565b9392505050565b6000602082019050818103600083015261249f8184611f7f565b905092915050565b600060208201905081810360008301526124c18184611fdd565b905092915050565b600060208201905081810360008301526124e38184612052565b905092915050565b60006020820190506125006000830184612125565b92915050565b600060408201905061251b6000830185612134565b6125286020830184611f70565b9392505050565b6000602082019050612544600083018461217c565b92915050565b600060208201905061255f600083018461218b565b92915050565b600060208201905061257a600083018461219a565b92915050565b60006020820190508181036000830152612599816121e2565b9050919050565b600060208201905081810360008301526125b981612205565b9050919050565b600060208201905081810360008301526125d981612228565b9050919050565b600060208201905081810360008301526125f98161224b565b9050919050565b6000602082019050818103600083015261261a818461237d565b905092915050565b600061262c61263d565b905061263882826129ed565b919050565b6000604051905090565b600067ffffffffffffffff82111561266257612661612a96565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561268e5761268d612a96565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156126ba576126b9612a96565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156126e6576126e5612a96565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561271257612711612a96565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561273e5761273d612a96565b5b61274782612ac5565b9050602081019050919050565b600067ffffffffffffffff82111561276f5761276e612a96565b5b61277882612ac5565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006128bd82612906565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600061294a82612951565b9050919050565b600061295c82612906565b9050919050565b600061296e82612975565b9050919050565b600061298082612906565b9050919050565b600061299282612999565b9050919050565b60006129a482612906565b9050919050565b82818337600083830152505050565b60005b838110156129d85780820151818401526020810190506129bd565b838111156129e7576000848401525b50505050565b6129f682612ac5565b810181811067ffffffffffffffff82111715612a1557612a14612a96565b5b80604052505050565b6000612a2982612935565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a5c57612a5b612a67565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b612bcf816128b2565b8114612bda57600080fd5b50565b612be6816128c4565b8114612bf157600080fd5b50565b612bfd816128d0565b8114612c0857600080fd5b50565b612c14816128da565b8114612c1f57600080fd5b50565b612c2b81612926565b8114612c3657600080fd5b50565b612c4281612935565b8114612c4d57600080fd5b5056fea2646970667358221220855437c197c7afb3bddccaade8e1808e6d7f033cf9e78945d1e8941027877d9b64736f6c63430008030033";

export class ContentManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContentManager> {
    return super.deploy(overrides || {}) as Promise<ContentManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContentManager {
    return super.attach(address) as ContentManager;
  }
  connect(signer: Signer): ContentManager__factory {
    return super.connect(signer) as ContentManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentManagerInterface {
    return new utils.Interface(_abi) as ContentManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentManager {
    return new Contract(address, _abi, signerOrProvider) as ContentManager;
  }
}
