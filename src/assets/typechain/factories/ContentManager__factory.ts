/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContentManager,
  ContentManagerInterface,
} from "../ContentManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControlManager",
    outputs: [
      {
        internalType: "contract IAccessControlManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "publicDataUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "hiddenDataUri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "royaltyRate",
            type: "uint24",
          },
        ],
        internalType: "struct LibAsset.CreateData[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "addAssetBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "contract IContent",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contentStorage",
    outputs: [
      {
        internalType: "contract IContentStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_content",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contentStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControlManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
        ],
        internalType: "struct LibAsset.SystemApprovalPair[]",
        name: "_operators",
        type: "tuple[]",
      },
    ],
    name: "registerOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_rate",
        type: "uint24",
      },
    ],
    name: "setContractRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct LibAsset.AssetUri[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setHiddenUriBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct LibAsset.AssetUri[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setPublicUriBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "royaltyRate",
            type: "uint24",
          },
        ],
        internalType: "struct LibAsset.AssetRoyalties[]",
        name: "_assets",
        type: "tuple[]",
      },
    ],
    name: "setTokenRoyaltiesBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612707806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063960e9a031161008c578063bc226dda11610066578063bc226dda14610211578063c0c53b8b1461022d578063f2fde38b14610249578063fd53da9214610265576100ea565b8063960e9a03146101b9578063ae95f3ca146101d5578063b4a0bdf3146101f3576100ea565b806352104efd116100c857806352104efd14610157578063715018a6146101735780638a4d5a671461017d5780638da5cb5b1461019b576100ea565b806301ffc9a7146100ef578063094bc2761461011f5780631c26a2cd1461013b575b600080fd5b61010960048036038101906101049190611b8e565b610281565b6040516101169190612040565b60405180910390f35b61013960048036038101906101349190611b24565b610293565b005b61015560048036038101906101509190611aa2565b610664565b005b610171600480360381019061016c9190611a25565b610770565b005b61017b61087f565b005b610185610907565b60405161019291906120ba565b60405180910390f35b6101a361092d565b6040516101b09190611f96565b60405180910390f35b6101d360048036038101906101ce9190611aa2565b610957565b005b6101dd610a63565b6040516101ea919061209f565b60405180910390f35b6101fb610a89565b6040516102089190612084565b60405180910390f35b61022b60048036038101906102269190611ae3565b610aaf565b005b610247600480360381019061024291906119d6565b610bbb565b005b610263600480360381019061025e91906119ad565b610cb2565b005b61027f600480360381019061027a9190611a61565b610daa565b005b600061028c82610eb6565b9050919050565b61029b610f2e565b73ffffffffffffffffffffffffffffffffffffffff166102b961092d565b73ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690612135565b60405180910390fd5b60005b815181101561066057818181518110610354577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151156104dc5760cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f2ff15d60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b15801561040b57600080fd5b505afa15801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190611b65565b84848151811061047c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001516040518363ffffffff1660e01b81526004016104a592919061205b565b600060405180830381600087803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b5050505061064f565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d547741f60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d53913936040518163ffffffff1660e01b815260040160206040518083038186803b15801561058257600080fd5b505afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611b65565b8484815181106105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001516040518363ffffffff1660e01b815260040161061c92919061205b565b600060405180830381600087803b15801561063657600080fd5b505af115801561064a573d6000803e3d6000fd5b505050505b806106599061249f565b9050610312565b5050565b61066c610f2e565b73ffffffffffffffffffffffffffffffffffffffff1661068a61092d565b73ffffffffffffffffffffffffffffffffffffffff16146106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790612135565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c26a2cd826040518263ffffffff1660e01b815260040161073b9190611ffc565b600060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b5050505050565b610778610f2e565b73ffffffffffffffffffffffffffffffffffffffff1661079661092d565b73ffffffffffffffffffffffffffffffffffffffff16146107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e390612135565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166352104efd83836040518363ffffffff1660e01b8152600401610849929190611fb1565b600060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b505050505050565b610887610f2e565b73ffffffffffffffffffffffffffffffffffffffff166108a561092d565b73ffffffffffffffffffffffffffffffffffffffff16146108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290612135565b60405180910390fd5b6109056000610f36565b565b60c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61095f610f2e565b73ffffffffffffffffffffffffffffffffffffffff1661097d61092d565b73ffffffffffffffffffffffffffffffffffffffff16146109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca90612135565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663960e9a03826040518263ffffffff1660e01b8152600401610a2e9190611ffc565b600060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b5050505050565b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ab7610f2e565b73ffffffffffffffffffffffffffffffffffffffff16610ad561092d565b73ffffffffffffffffffffffffffffffffffffffff1614610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290612135565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc226dda826040518263ffffffff1660e01b8152600401610b86919061201e565b600060405180830381600087803b158015610ba057600080fd5b505af1158015610bb4573d6000803e3d6000fd5b5050505050565b600060019054906101000a900460ff1680610be1575060008054906101000a900460ff16155b610c20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1790612115565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c70576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c78610ffc565b610c806110e5565b610c8b8484846111be565b8015610cac5760008060016101000a81548160ff0219169083151502179055505b50505050565b610cba610f2e565b73ffffffffffffffffffffffffffffffffffffffff16610cd861092d565b73ffffffffffffffffffffffffffffffffffffffff1614610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2590612135565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d95906120d5565b60405180910390fd5b610da781610f36565b50565b610db2610f2e565b73ffffffffffffffffffffffffffffffffffffffff16610dd061092d565b73ffffffffffffffffffffffffffffffffffffffff1614610e26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1d90612135565b60405180910390fd5b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd53da92826040518263ffffffff1660e01b8152600401610e819190611fda565b600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b5050505050565b6000610ec182611385565b80610f27575060976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680611022575060008054906101000a900460ff16155b611061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105890612115565b60405180910390fd5b60008060019054906101000a900460ff1615905080156110b1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6110c16110bc610f2e565b610f36565b80156110e25760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061110b575060008054906101000a900460ff16155b61114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114190612115565b60405180910390fd5b60008060019054906101000a900460ff16159050801561119a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156111bb5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806111e4575060008054906101000a900460ff16155b611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121a90612115565b60405180910390fd5b60008060019054906101000a900460ff161590508015611273576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61129b7e7a1753000000000000000000000000000000000000000000000000000000006113ef565b8360c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561137f5760008060016101000a81548160ff0219169083151502179055505b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f906120f5565b60405180910390fd5b600160976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006114d86114d38461217a565b612155565b905080838252602082019050828560608602820111156114f757600080fd5b60005b85811015611527578161150d88826117bb565b8452602084019350606083019250506001810190506114fa565b5050509392505050565b600061154461153f846121a6565b612155565b9050808382526020820190508260005b85811015611584578135850161156a888261181b565b845260208401935060208301925050600181019050611554565b5050509392505050565b60006115a161159c846121d2565b612155565b9050808382526020820190508260005b858110156115e157813585016115c7888261187f565b8452602084019350602083019250506001810190506115b1565b5050509392505050565b60006115fe6115f9846121fe565b612155565b9050808382526020820190508285604086028201111561161d57600080fd5b60005b8581101561164d57816116338882611937565b845260208401935060408301925050600181019050611620565b5050509392505050565b600061166a6116658461222a565b612155565b90508281526020810184848401111561168257600080fd5b61168d84828561242c565b509392505050565b6000813590506116a481612647565b92915050565b600082601f8301126116bb57600080fd5b81356116cb8482602086016114c5565b91505092915050565b600082601f8301126116e557600080fd5b81356116f5848260208601611531565b91505092915050565b600082601f83011261170f57600080fd5b813561171f84826020860161158e565b91505092915050565b600082601f83011261173957600080fd5b81356117498482602086016115eb565b91505092915050565b6000813590506117618161265e565b92915050565b60008151905061177681612675565b92915050565b60008135905061178b8161268c565b92915050565b600082601f8301126117a257600080fd5b81356117b2848260208601611657565b91505092915050565b6000606082840312156117cd57600080fd5b6117d76060612155565b905060006117e784828501611998565b60008301525060206117fb84828501611695565b602083015250604061180f84828501611983565b60408301525092915050565b60006040828403121561182d57600080fd5b6118376040612155565b9050600061184784828501611998565b600083015250602082013567ffffffffffffffff81111561186757600080fd5b61187384828501611791565b60208301525092915050565b600060a0828403121561189157600080fd5b61189b60a0612155565b9050600082013567ffffffffffffffff8111156118b757600080fd5b6118c384828501611791565b600083015250602082013567ffffffffffffffff8111156118e357600080fd5b6118ef84828501611791565b602083015250604061190384828501611998565b604083015250606061191784828501611695565b606083015250608061192b84828501611983565b60808301525092915050565b60006040828403121561194957600080fd5b6119536040612155565b9050600061196384828501611695565b600083015250602061197784828501611752565b60208301525092915050565b600081359050611992816126a3565b92915050565b6000813590506119a7816126ba565b92915050565b6000602082840312156119bf57600080fd5b60006119cd84828501611695565b91505092915050565b6000806000606084860312156119eb57600080fd5b60006119f986828701611695565b9350506020611a0a86828701611695565b9250506040611a1b86828701611695565b9150509250925092565b60008060408385031215611a3857600080fd5b6000611a4685828601611695565b9250506020611a5785828601611983565b9150509250929050565b600060208284031215611a7357600080fd5b600082013567ffffffffffffffff811115611a8d57600080fd5b611a99848285016116aa565b91505092915050565b600060208284031215611ab457600080fd5b600082013567ffffffffffffffff811115611ace57600080fd5b611ada848285016116d4565b91505092915050565b600060208284031215611af557600080fd5b600082013567ffffffffffffffff811115611b0f57600080fd5b611b1b848285016116fe565b91505092915050565b600060208284031215611b3657600080fd5b600082013567ffffffffffffffff811115611b5057600080fd5b611b5c84828501611728565b91505092915050565b600060208284031215611b7757600080fd5b6000611b8584828501611767565b91505092915050565b600060208284031215611ba057600080fd5b6000611bae8482850161177c565b91505092915050565b6000611bc38383611e6d565b60608301905092915050565b6000611bdb8383611eaf565b905092915050565b6000611bef8383611eec565b905092915050565b611c0081612333565b82525050565b611c0f81612333565b82525050565b6000611c208261228b565b611c2a81856122de565b9350611c358361225b565b8060005b83811015611c66578151611c4d8882611bb7565b9750611c58836122b7565b925050600181019050611c39565b5085935050505092915050565b6000611c7e82612296565b611c8881856122ef565b935083602082028501611c9a8561226b565b8060005b85811015611cd65784840389528151611cb78582611bcf565b9450611cc2836122c4565b925060208a01995050600181019050611c9e565b50829750879550505050505092915050565b6000611cf3826122a1565b611cfd8185612300565b935083602082028501611d0f8561227b565b8060005b85811015611d4b5784840389528151611d2c8582611be3565b9450611d37836122d1565b925060208a01995050600181019050611d13565b50829750879550505050505092915050565b611d6681612345565b82525050565b611d7581612351565b82525050565b611d84816123c0565b82525050565b611d93816123e4565b82525050565b611da281612408565b82525050565b6000611db3826122ac565b611dbd8185612311565b9350611dcd81856020860161243b565b611dd681612546565b840191505092915050565b6000611dee602683612322565b9150611df982612557565b604082019050919050565b6000611e11601c83612322565b9150611e1c826125a6565b602082019050919050565b6000611e34602e83612322565b9150611e3f826125cf565b604082019050919050565b6000611e57602083612322565b9150611e628261261e565b602082019050919050565b606082016000820151611e836000850182611f87565b506020820151611e966020850182611bf7565b506040820151611ea96040850182611f69565b50505050565b6000604083016000830151611ec76000860182611f87565b5060208301518482036020860152611edf8282611da8565b9150508091505092915050565b600060a0830160008301518482036000860152611f098282611da8565b91505060208301518482036020860152611f238282611da8565b9150506040830151611f386040860182611f87565b506060830151611f4b6060860182611bf7565b506080830151611f5e6080860182611f69565b508091505092915050565b611f72816123a7565b82525050565b611f81816123a7565b82525050565b611f90816123b6565b82525050565b6000602082019050611fab6000830184611c06565b92915050565b6000604082019050611fc66000830185611c06565b611fd36020830184611f78565b9392505050565b60006020820190508181036000830152611ff48184611c15565b905092915050565b600060208201905081810360008301526120168184611c73565b905092915050565b600060208201905081810360008301526120388184611ce8565b905092915050565b60006020820190506120556000830184611d5d565b92915050565b60006040820190506120706000830185611d6c565b61207d6020830184611c06565b9392505050565b60006020820190506120996000830184611d7b565b92915050565b60006020820190506120b46000830184611d8a565b92915050565b60006020820190506120cf6000830184611d99565b92915050565b600060208201905081810360008301526120ee81611de1565b9050919050565b6000602082019050818103600083015261210e81611e04565b9050919050565b6000602082019050818103600083015261212e81611e27565b9050919050565b6000602082019050818103600083015261214e81611e4a565b9050919050565b600061215f612170565b905061216b828261246e565b919050565b6000604051905090565b600067ffffffffffffffff82111561219557612194612517565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156121c1576121c0612517565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156121ed576121ec612517565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561221957612218612517565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561224557612244612517565b5b61224e82612546565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061233e82612387565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006123cb826123d2565b9050919050565b60006123dd82612387565b9050919050565b60006123ef826123f6565b9050919050565b600061240182612387565b9050919050565b60006124138261241a565b9050919050565b600061242582612387565b9050919050565b82818337600083830152505050565b60005b8381101561245957808201518184015260208101905061243e565b83811115612468576000848401525b50505050565b61247782612546565b810181811067ffffffffffffffff8211171561249657612495612517565b5b80604052505050565b60006124aa826123b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124dd576124dc6124e8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61265081612333565b811461265b57600080fd5b50565b61266781612345565b811461267257600080fd5b50565b61267e81612351565b811461268957600080fd5b50565b6126958161235b565b81146126a057600080fd5b50565b6126ac816123a7565b81146126b757600080fd5b50565b6126c3816123b6565b81146126ce57600080fd5b5056fea264697066735822122002ea6f83fb5fab4e7026c60f9d419c766e6f8dc74ba394d83a4c058b12c3a57f64736f6c63430008030033";

export class ContentManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContentManager> {
    return super.deploy(overrides || {}) as Promise<ContentManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContentManager {
    return super.attach(address) as ContentManager;
  }
  connect(signer: Signer): ContentManager__factory {
    return super.connect(signer) as ContentManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentManagerInterface {
    return new utils.Interface(_abi) as ContentManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentManager {
    return new Contract(address, _abi, signerOrProvider) as ContentManager;
  }
}
